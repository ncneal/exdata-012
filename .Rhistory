library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-7, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-6, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-5, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-4, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-3, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-2, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("xlsx")
library("dplyr")
datecharacter <- format(Sys.Date()-1, "%Y%m%d")
datadir <- "C:/Users/nick.neal/Documents/Repository/Projects/Call Center Reporting/"
destfile <- paste0(datadir,"dailyexport",datecharacter,".xlsx")
textdb <- paste0(datadir,"calldata.csv")
downloadfilename <- paste0("outerwallinbound.",datecharacter,".xlsx")
downloadxlsx <- paste0("ftp://coinstar:c0%21n5t%405@ftpfarm.west.com/datafeed/",downloadfilename)
download.file(downloadxlsx, destfile, method = "internal", mode = "wb")
if (file.info(destfile)$size==0) {
downloadgz <- paste0(downloadxlsx,".gz")
destfilegz <- paste0(destfile,".gz")
download.file(downloadgz, destfilegz, method = "internal")
gunzip(destfilegz, overwrite = TRUE,  remove = TRUE)
#        file.rename(paste0(datadir,downloadfilename),paste0(datadir, destfile))
}
callcentertbldf <- tbl_df(read.xlsx2(destfile, 1))
#filter and format final csv export table
formattedexport <- callcentertbldf %>%
filter(grepl("Eco", QUEUE_RESOURCE_NAME)) %>%
select(-QUEUE_END_TIME, -AGENT_END_TIME, -EMPLOYEE_ID, -ANI ) %>%
mutate(QUEUE_START_TIME = QUEUE_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character(),
AGENT_START_TIME = AGENT_START_TIME %>%
strptime ("%Y-%m-%d-%H.%M.%S") %>%
as.character())
write.table(formattedexport, file = textdb, sep = ",", row.names = FALSE, col.names = FALSE, append = TRUE, qmethod = "double")
library("R.utils")
library("dplyr")
datasavelocation <- "C:/Users/nick.neal/Documents/Repository/R/GetDataSS05HID.csv"
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", datasavelocation)
tbldf <- tbldf(read.csv(datasavelocation))
tbldf %>%
filter(VAL > 1000000)
library("R.utils")
library("dplyr")
datasavelocation <- "C:/Users/nick.neal/Documents/Repository/R/GetDataSS05HID.csv"
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", datasavelocation)
tbldf <- tbl_df(read.csv(datasavelocation))
tbldf %>%
filter(VAL > 1000000)
tbl_df
tbldf
tbl_df.VAL
tbldf(VAL)
library("R.utils")
library("dplyr")
datasavelocation <- "C:/Users/nick.neal/Documents/Repository/R/GetDataSS05HID.csv"
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", datasavelocation)
tbldf <- tbl_df(read.csv(datasavelocation))
tbldf %>%
filter(VAL = 24)
tbldf %>%
filter(VAL = "$1000000+")
tbldf %>%
filter(VAL, "$1000000+")
tbldf %>%
filter(VAL == 24)
summarise(count = count(VAL))
tbldf %>%
filter(VAL == 24) %>%
summarise(count = count(VAL))
getwd()
setwd("C:/Users/nick.neal/Documents/R")
getwd()
setwd("C:/Users/nick.neal/Documents/Workspace")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./gettingandcleaningdata/",)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./gettingandcleaningdata/",)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "C:/Users/nick.neal/Documents/Workspace/gettingandcleaningdata/",)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "C:/Users/nick.neal/Documents/Workspace/gettingandcleaningdata/microsurverydata.csv",)
microdata <- data.table(read.csv("C:/Users/nick.neal/Documents/Workspace/gettingandcleaningdata/microsurverydata.csv"))
library(data.table)
?data.table
microdata <- data.table(read.csv("C:/Users/nick.neal/Documents/Workspace/gettingandcleaningdata/microsurverydata.csv"))
nchar("<meta name="Distribution" content="Global" />")
?nchar
nchar("<meta name= Distribution  content= Global  />")
?replace
read.csv("C:\Users\nick.neal\Desktop\Dashboard\Temp Storage\KioskWeeklyAverageDrops.csv")
read.csv("C:\\Users\\nick.neal\\Desktop\\Dashboard\\Temp Storage\\KioskWeeklyAverageDrops.csv")
read.csv("C:\\Users\\nick.neal\\Desktop\\Dashboard\\Temp Storage\\KioskWeeklyAvgDrops.csv")
2014 <- read.csv("C:\\Users\\nick.neal\\Desktop\\Dashboard\\Temp Storage\\KioskWeeklyAvgDrops.csv")
Year <- read.csv("C:\\Users\\nick.neal\\Desktop\\Dashboard\\Temp Storage\\KioskWeeklyAvgDrops.csv")
June <- read.csv("C:\\Users\\nick.neal\\Desktop\\Dashboard\\Temp Storage\\KioskWeeklyAvgDropsJune.csv")
summary(Year)
str(Year)
library("Dplyr")
library("dplyr")
YearGr <- group_by(Year, PromoKiosk)
summary(YearGr)
quantiles(YearGr, probs = seq(1,10,25,50,75))
quantile(YearGr, probs = seq(1,10,25,50,75))
quantile(YearGr, probs = seq(.01,.10,.25,.50,.75))
quantile(YearGr$AvgTransactionCount, probs = seq(.01,.10,.25,.50,.75))
quantile(YearGr$AvgTransactionCount, probs = seq(.01,.10))
quantile(YearGr$AvgTransactionCount, probs = c(.01,.10))
quantile(YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75.100))
quantile(YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75,1))
quantile(YearGr$PromoKiosk,YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75,1))
table(YearGr$PromoKiosk,quantile(YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75,1)))
quantile(YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75,1))
summarize(YearGr, quantile(YearGr$AvgTransactionCount, probs = c(.01,.10,.25,.50,.75,1)))
summarize(YearGr, one=quantile(YearGr$AvgTransactionCount, probs = .01), ten=quantile(YearGr$AvgTransactionCount, probs = .10), 25=quantile(YearGr$AvgTransactionCount, probs = .25), 50=quantile(YearGr$AvgTransactionCount, probs = .50), 75=quantile(YearGr$AvgTransactionCount, probs = .75), 100=quantile(YearGr$AvgTransactionCount, probs = 1))
summarize(YearGr, q1=quantile(YearGr$AvgTransactionCount, probs = .01), q10=quantile(YearGr$AvgTransactionCount, probs = .10), q25=quantile(YearGr$AvgTransactionCount, probs = .25), q50=quantile(YearGr$AvgTransactionCount, probs = .50), q75=quantile(YearGr$AvgTransactionCount, probs = .75), q100=quantile(YearGr$AvgTransactionCount, probs = 1))
YearGr
summarize(YearGr, q1=quantile(YearGr$AvgTransactionCount, probs = .01), q10=quantile(YearGr$AvgTransactionCount, probs = .10), q25=quantile(YearGr$AvgTransactionCount, probs = .25), q50=quantile(YearGr$AvgTransactionCount, probs = .50), q75=quantile(YearGr$AvgTransactionCount, probs = .75), q100=quantile(YearGr$AvgTransactionCount, probs = 1))
library(swirl)
?version
R.version
()
swirl()
install_from_swirl("Data Analysis")
swirl()
cars
cars$mpgCity
myMPG <- cars$mpgCity
mean(mpMPG)
mean(myMPG)
median(myMPG)
table(myMPG)
play()
mode(myMPG)
nxt()
19
range(cars$price)
61.9-7.4
var(cars$price)
sd(cars$price)
nxt()
17
10
25
4
summary
summary(cars$price)
bye()
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb")
par("mfrow")
par("mar")
?scale
rm(tbldf)
rm(datasavelocation)
?sql
??sql
P1 <- c(0,0,0,0)
P2 <- c(0,0,0,0)
P2[2] <-1
?max
P1 <- max(P1, P2)
P1 <- c(0,0,0,0)
P1 <- pmax(P1, P2)
P1 <- c(0,3,0,0)
P1[3] <- 3
P2 <- c(0,0,4,0)
P2[7] <- 9
P2 <- c(0,0,9,0)
P2[4] <- 1
P2[2] <- 2
px <- c(0,2,3,1)
?read.csv
?read.table
instal.packages("sqldf")
install.packages("sqldf")
?comment
getwd()
list.files(.)
listfiles(.)
list.files(".")
?dir.create
dir.create("./exdata")
list.files(".")
?download.file
setwd("./exdata")
getwd(".")
getwd(".")
getwd()
# download file to current warking directory
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", "householdPowerConsumption.zip")
unzip("householdPowerConsumption.zip")
?sqldf
??sqldf
library("sqldf")
?sqldf
?read.table.sql
read.csv/sql
?read.csv.sql
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = '01/02/2007' OR date = '02/02/2007'", sep";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = /'01/02/2007/' OR date = /'02/02/2007/'", sep";")
file <- "household_power_consumption.txt"
read.csv.sql(file, sql = "select * from file where date = '01/02/2007' OR date = '02/02/2007'", sep";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = '02/02/2007/", sep";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = 02/02/2007/", sep";")
read.csv.sql("household_power_consumption.txt")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = 02/02/2007", sep";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = 02/02/2007")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = 02/02/2007", sep = "/;")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = 01/02/2007 OR date = 02/02/2007", sep = ";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where date = '01/02/2007' OR date = '02/02/2007'", sep = ";")
csv <- read.csv2("household_power_consumption.txt", sep =";")
str(csv)
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";")
install.packages("RH2")
library(RH2)
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";", field.types = Date = "Date"
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";", field.types = "Date = "Date"""
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";", field.types = "Date = Date"
""
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '01/02/2007' OR Date = '02/02/2007'", sep = ";", field.types = Date = "Date"
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '02/01/2007' OR Date = '02/02/2007'", sep = ";")
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '2/1/2007' OR Date = '2/2/2007'", sep = ";")
# read text file into data frame, filtered on dates needed
householdPowerConsumption <- read.csv.sql("household_power_consumption.txt", sql = "select * from file WHERE Date IN ('2/1/2007', '2/2/2007') AND * <> '?', sep = ";")
rm(csv)
rmtbldf
rm(tbldf)
read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date = '2/1/2007' OR Date = '2/2/2007'")
householdPowerConsumption <- read.csv.sql("household_power_consumption.txt", sql = "select * from file WHERE Date IN ('2/1/2007', '2/2/2007')", sep = ";")
View(householdPowerConsumption)
View(householdPowerConsumption)
View(householdPowerConsumption)
hist(power$Global_active_power, col="red", xlab="Global Active Power (Kilowatts)", main="Global Active Power", ylim=c(0,1200))
hist(househodPowerConsumption$Global_active_power, col="red", xlab="Global Active Power (Kilowatts)", main="Global Active Power", ylim=c(0,1200))
hist(householdPowerConsumption$Global_active_power, col="red", xlab="Global Active Power (Kilowatts)", main="Global Active Power", ylim=c(0,1200))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
plot(householdPowerConsumption$Date, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
lubridate(linrary)
lubridate(library)
library(lubridate)
dmyhms(paste(householdPowerConsumption$Date, householdPowerConsumption$Time))
# combine date and time to datetime field called 'dateTime'
householdPowerConsumption$dateTime <- strptime(paste(power$Date, power$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
householdPowerConsumption$dateTime <- strptime(paste(householdPowerConsumption$Date, householdPowerConsumption$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(householdPowerConsumption$Date, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
householdPowerConsumption <- read.csv.sql("household_power_consumption.txt", sql = "select * from file WHERE Date IN ('1/2/2007', '2/2/2007')", sep = ";")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
householdPowerConsumption$dateTime <- strptime(paste(householdPowerConsumption$Date, householdPowerConsumption$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
plot(householdPowerConsumption$dateTime, power$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, power$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, power$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, power$Sub_metering_3, col="blue")
legend("topright",  lty=1, col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?householdPowerConsumption
str(householdPowerConsumption)
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$completeDate, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$completeDate, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
getwd()
png(file = "./project1/plot4.png")
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
dev.off()
png(file = "./project1/plot4.png")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
png(file = "./project1/plot4.png")
par(mfrow=c(2, 2), mar=c(4, 4, 2 , 1))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power", xlab="")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, bty="n", col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_reactive_power, type="l", ylab="Global_reactive_power", xlab="datetime")
dev.off()
png(file = "./project1/plot3.png")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, type="n", ylab="Energy Sub Metering", xlab="")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_1, col="black")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_2, col="red")
lines(householdPowerConsumption$dateTime, householdPowerConsumption$Sub_metering_3, col="blue")
legend("topright",  lty=1, col=c("black", "blue", "red"), cex=0.7, legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
png(file = "./project1/plot2.png")
plot(householdPowerConsumption$dateTime, householdPowerConsumption$Global_active_power, type="l", ylab="Global Active Power (Kilowatts)", xlab="")
dev.off()
png(file = "./project1/plot1.png")
hist(householdPowerConsumption$Global_active_power, col="red", xlab="Global Active Power (Kilowatts)", main="Global Active Power", ylim=c(0,1200))
dev.off()
read.csv.sql("household_power_consumption.txt", sql = "select * from file where Date = '2/1/2007' OR Date = '2/2/2007'")
